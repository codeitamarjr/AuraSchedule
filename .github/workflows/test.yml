name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, bcmath, dom, pdo_mysql
          ini-values: memory_limit=-1
          coverage: none

      # Step 3: Cache Composer dependencies
      - name: Cache Composer Dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      # Step 4: Install Composer Dependencies
      - name: Install Composer Dependencies
        run: composer install --no-progress --no-suggest --prefer-dist

      # Step 5: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16 # Use your Node.js version

      # Step 6: Cache Node.js Modules
      - name: Cache Node.js Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      # Step 7: Install Node.js Dependencies
      - name: Install Node.js Dependencies
        run: npm install

      # Step 8: Build Assets
      - name: Build Frontend Assets
        run: npm run build

      # Step 9: Set up the .env file
      - name: Set up Environment
        run: cp .env.example .env

      # Step 10: Generate Application Key
      - name: Generate Application Key
        run: php artisan key:generate

      # Step 11: Configure Database (SQLite Example)
      - name: Set up Database
        run: |
          touch database/testing.sqlite
          php artisan migrate --env=testing

      # Step 12: Run Tests
      - name: Run Tests
        run: composer test
